{"ast":null,"code":"import React from'react';import'./weatherinfo.css';var WeatherInfo=function WeatherInfo(props){var _props$weather=props.weather,city=_props$weather.city,date=_props$weather.date,temp=_props$weather.temp,temp_min=_props$weather.temp_min,temp_max=_props$weather.temp_max,sunrise=_props$weather.sunrise,sunset=_props$weather.sunset,pressure=_props$weather.pressure,humidity=_props$weather.humidity,windspeed=_props$weather.windspeed,err=_props$weather.err;var content=null;if(!err&&city){var sunriseTime=new Date(sunrise*1000).toLocaleTimeString();var sunsetTime=new Date(sunset*1000).toLocaleTimeString();content=React.createElement(React.Fragment,null,React.createElement(\"h3\",null,\" \",city,\" \"),React.createElement(\"h4\",null,\" Czas: \",date,\" \"),React.createElement(\"hr\",null),React.createElement(\"h2\",null,\" \",temp,\"\\xB0C\"),React.createElement(\"h3\",null,\" \",pressure,\" hPa\"),React.createElement(\"hr\",null),React.createElement(\"h4\",null,\" Wilgotno\\u015B\\u0107: \",humidity,\"%\"),React.createElement(\"h4\",null,\" Pr\\u0119dko\\u015B\\u0107 wiatru: \",windspeed,\" m/s\"),React.createElement(\"h4\",null,\"Temperatura minimalna: \",temp_min,\"\\xB0C\"),React.createElement(\"h4\",null,\"Temperatura maksymalna: \",temp_max,\"\\xB0C\"),React.createElement(\"h4\",null,\"Wsch\\xF3d S\\u0142o\\u0144ca: \",sunriseTime),React.createElement(\"h4\",null,\"Zach\\xF3d S\\u0142o\\u0144ca: \",sunsetTime));}return React.createElement(\"div\",{className:\"weatherInfo\"},err?\"Nie ma w bazie wyszukiwanego miasta: \".concat(city):content);};export default WeatherInfo;","map":{"version":3,"sources":["/Users/maciejchrustowski/Repositories/pogodareact/src/components/WeatherInfo.js"],"names":["React","WeatherInfo","props","weather","city","date","temp","temp_min","temp_max","sunrise","sunset","pressure","humidity","windspeed","err","content","sunriseTime","Date","toLocaleTimeString","sunsetTime"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,mBAAP,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,oBAarBA,KAAK,CAACC,OAbe,CAErBC,IAFqB,gBAErBA,IAFqB,CAGrBC,IAHqB,gBAGrBA,IAHqB,CAIrBC,IAJqB,gBAIrBA,IAJqB,CAKrBC,QALqB,gBAKrBA,QALqB,CAMrBC,QANqB,gBAMrBA,QANqB,CAOrBC,OAPqB,gBAOrBA,OAPqB,CAQrBC,MARqB,gBAQrBA,MARqB,CASrBC,QATqB,gBASrBA,QATqB,CAUrBC,QAVqB,gBAUrBA,QAVqB,CAWrBC,SAXqB,gBAWrBA,SAXqB,CAYrBC,GAZqB,gBAYrBA,GAZqB,CAezB,GAAIC,CAAAA,OAAO,CAAG,IAAd,CAEA,GAAG,CAACD,GAAD,EAAQV,IAAX,CAAiB,CAEb,GAAMY,CAAAA,WAAW,CAAG,GAAIC,CAAAA,IAAJ,CAASR,OAAO,CAAG,IAAnB,EAAyBS,kBAAzB,EAApB,CACA,GAAMC,CAAAA,UAAU,CAAG,GAAIF,CAAAA,IAAJ,CAASP,MAAM,CAAG,IAAlB,EAAwBQ,kBAAxB,EAAnB,CACAH,OAAO,CACH,wCACI,kCAAMX,IAAN,KADJ,CAEI,wCAAYC,IAAZ,KAFJ,CAGI,8BAHJ,CAII,kCAAMC,IAAN,SAJJ,CAKI,kCAAMK,QAAN,QALJ,CAOI,8BAPJ,CAQI,wDAAkBC,QAAlB,KARJ,CASI,kEAAuBC,SAAvB,QATJ,CAUI,wDAA4BN,QAA5B,SAVJ,CAWI,yDAA6BC,QAA7B,SAXJ,CAYI,6DAAoBQ,WAApB,CAZJ,CAaI,6DAAoBG,UAApB,CAbJ,CADJ,CAmBH,CACD,MACI,4BAAK,SAAS,CAAC,aAAf,EACKL,GAAG,gDAA2CV,IAA3C,EAAoDW,OAD5D,CADJ,CAKH,CA9CD,CAgDA,cAAed,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport './weatherinfo.css';\n\nconst WeatherInfo = props => {\n    const {\n        city,\n        date,\n        temp,\n        temp_min,\n        temp_max,\n        sunrise,\n        sunset,\n        pressure,\n        humidity,\n        windspeed,\n        err,\n    } = props.weather\n\n    let content = null;\n\n    if(!err && city) {\n\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString()\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString()\n        content = (\n            <>\n                <h3> {city} </h3>\n                <h4> Czas: {date} </h4>\n                <hr></hr>\n                <h2> {temp}&#176;C</h2>\n                <h3> {pressure} hPa</h3>\n                \n                <hr></hr>\n                <h4> Wilgotność: {humidity}%</h4>\n                <h4> Prędkość wiatru: {windspeed} m/s</h4>\n                <h4>Temperatura minimalna: {temp_min}&#176;C</h4>\n                <h4>Temperatura maksymalna: {temp_max}&#176;C</h4>\n                <h4>Wschód Słońca: {sunriseTime}</h4>\n                <h4>Zachód Słońca: {sunsetTime}</h4>\n                \n                \n            </>\n        )\n    }\n    return (\n        <div className=\"weatherInfo\">\n            {err ? `Nie ma w bazie wyszukiwanego miasta: ${city}` : content}\n        </div>\n    )\n}\n\nexport default WeatherInfo;"]},"metadata":{},"sourceType":"module"}