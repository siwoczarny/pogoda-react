{"ast":null,"code":"var _jsxFileName = \"/Users/maciejchrustowski/ReactApps/weatherapp/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport WeatherInfo from './WeatherInfo';\nconst APIkey = 'a67f1322578aaa1a1bbea6ca22e0f941';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      date: '',\n      city: '',\n      coordination: '',\n      temp: '',\n      temp_min: '',\n      temp_max: '',\n      pressure: '',\n      humidity: '',\n      windspeed: '',\n      err: ''\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.handleCitySubmit = e => {\n      e.preventDefault();\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIkey}&units=metric&lang=pl`;\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Nie udało się pobrać danych!\");\n      }).then(response => response.json()).then(data => {\n        const time = new Date().toLocaleString();\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          city: prevState.value,\n          temp: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          windspeed: data.wind.speed\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }));\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Pogoda\")), React.createElement(WeatherInfo, {\n      weather: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      submit: this.handleCitySubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejchrustowski/ReactApps/weatherapp/src/components/App.js"],"names":["React","Component","SearchBar","WeatherInfo","APIkey","App","state","value","date","city","coordination","temp","temp_min","temp_max","pressure","humidity","windspeed","err","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","time","Date","toLocaleString","prevState","main","wind","speed","catch","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport WeatherInfo from './WeatherInfo';\nconst APIkey = 'a67f1322578aaa1a1bbea6ca22e0f941'\n\nclass App extends Component {\n  state = { \n    value: '',\n    date: '',\n    city: '',\n    coordination: '',\n    temp: '',\n    temp_min: '',\n    temp_max: '',\n    pressure: '',\n    humidity: '',\n    windspeed: '',\n    err: '',\n   }\n  \n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  \n\n  handleCitySubmit = (e) => {\n      e.preventDefault()\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIkey}&units=metric&lang=pl`;\n\n      fetch(API)\n      .then(response => {\n        if(response.ok) {\n          return response\n        }\n        throw Error(\"Nie udało się pobrać danych!\")\n      })\n\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleString()\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          city: prevState.value,\n          temp: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          windspeed: data.wind.speed,\n        }))\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }))\n      })\n  }\n\n  render() { \n    return (\n      <div className=\"app\">\n        <header className=\"header\" id=\"header\">\n          <h1>Pogoda</h1>\n        </header>\n        <WeatherInfo weather={this.state} />\n        <SearchBar\n          value={this.state.value}\n          change={this.handleInputChange}\n          submit={this.handleCitySubmit}\n        />\n      </div>\n    );\n  }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}