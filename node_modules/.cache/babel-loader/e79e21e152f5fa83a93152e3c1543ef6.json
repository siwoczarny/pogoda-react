{"ast":null,"code":"var _jsxFileName = \"/Users/maciejchrustowski/ReactApps/weatherapp/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport WeatherInfo from './WeatherInfo';\nconst APIkey = 'a67f1322578aaa1a1bbea6ca22e0f941';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      date: '',\n      city: '',\n      coordination: '',\n      temp: '',\n      temp_min: '',\n      temp_max: '',\n      pressure: '',\n      humidity: '',\n      windspeed: '',\n      weathertype: '',\n      err: ''\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.changePhotoImg = data => {\n      switch (data.weather.main) {\n        case 'Clouds':\n          console.log(\"Zmiana pochmurno\");\n          break;\n\n        case 'Clear':\n          console.log(\"Zmiana pochmurno\");\n          break;\n\n        case 'Rain':\n          console.log(\"Zmiana pochmurno\");\n          break;\n\n        case 'Drizzle':\n        case 'Mist':\n          console.log(\"Zmiana pochmurno\");\n          break;\n\n        case 'Snow':\n          console.log(\"Zmiana pochmurno\");\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleCitySubmit = e => {\n      e.preventDefault();\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIkey}&units=metric&lang=pl`;\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Nie udało się pobrać danych!\");\n      }).then(response => response.json()).then(data => {\n        const time = new Date().toLocaleString();\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          city: prevState.value,\n          temp: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          windspeed: data.wind.speed\n        }));\n        changePhotoImg(data);\n      }).catch(err => {\n        console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }));\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Pogoda\")), React.createElement(WeatherInfo, {\n      weather: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      value: this.state.value,\n      change: this.handleInputChange,\n      submit: this.handleCitySubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maciejchrustowski/ReactApps/weatherapp/src/components/App.js"],"names":["React","Component","SearchBar","WeatherInfo","APIkey","App","state","value","date","city","coordination","temp","temp_min","temp_max","pressure","humidity","windspeed","weathertype","err","handleInputChange","e","setState","target","changePhotoImg","data","weather","main","console","log","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","time","Date","toLocaleString","prevState","wind","speed","catch","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport SearchBar from './SearchBar';\nimport WeatherInfo from './WeatherInfo';\nconst APIkey = 'a67f1322578aaa1a1bbea6ca22e0f941'\n\nclass App extends Component {\n  state = { \n    value: '',\n    date: '',\n    city: '',\n    coordination: '',\n    temp: '',\n    temp_min: '',\n    temp_max: '',\n    pressure: '',\n    humidity: '',\n    windspeed: '',\n    weathertype: '',\n    err: '',\n   }\n  \n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  changePhotoImg = (data) => {\n    switch (data.weather.main) {\n      case 'Clouds':\n        console.log(\"Zmiana pochmurno\");\n        break;\n\n        case 'Clear':\n        console.log(\"Zmiana pochmurno\");\n        break;\n\n        case 'Rain':\n        console.log(\"Zmiana pochmurno\");\n        break;\n\n        case 'Drizzle':\n        case 'Mist':\n        console.log(\"Zmiana pochmurno\");\n        break;\n\n        case 'Snow':\n        console.log(\"Zmiana pochmurno\");\n        break;\n\n        default:\n          break;\n    }\n  }\n\n  handleCitySubmit = (e) => {\n      e.preventDefault()\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&APPID=${APIkey}&units=metric&lang=pl`;\n\n      fetch(API)\n      .then(response => {\n        if(response.ok) {\n          return response\n        }\n        throw Error(\"Nie udało się pobrać danych!\")\n      })\n\n      .then(response => response.json())\n      .then(data => {\n        const time = new Date().toLocaleString()\n        this.setState(prevState => ({\n          err: false,\n          date: time,\n          city: prevState.value,\n          temp: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          pressure: data.main.pressure,\n          humidity: data.main.humidity,\n          windspeed: data.wind.speed,\n        }))\n        changePhotoImg(data);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState(prevState => ({\n          err: true,\n          city: prevState.value\n        }))\n      })\n  }\n\n  render() { \n    return (\n      <div className=\"app\">\n        <header className=\"header\" id=\"header\">\n          <h1>Pogoda</h1>\n        </header>\n        <WeatherInfo weather={this.state} />\n        <SearchBar\n          value={this.state.value}\n          change={this.handleInputChange}\n          submit={this.handleCitySubmit}\n        />\n      </div>\n    );\n  }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}